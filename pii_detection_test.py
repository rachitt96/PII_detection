# -*- coding: utf-8 -*-
"""PII_detection_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1knQ7l7UPORHuRHp8c0hAiyDl60yccqKi
"""

'''
from google.colab import files
uploaded = files.upload()
'''

import pandas as pd
import nltk
from nltk.corpus import stopwords
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
import boto3

train_df = pd.read_csv('train_to.tsv', sep = '\t', names = ['to', 'body', 'PII'])
test_df = pd.read_csv('test_emails.tsv', sep = '\t', names = ['id','to', 'body'])

train_df = train_df.dropna()
train_df = train_df.reset_index()

test_df = test_df.dropna()
test_df = test_df.reset_index()

train_df = train_df.drop(columns = 'index')
test_df = test_df.drop(columns = 'index')

train_df.loc[train_df.PII == 2, 'PII'] = 1

nltk.download("stopwords")

stopset = set(stopwords.words('english'))
vectorization = TfidfVectorizer(stop_words = stopset)

vectorization_1 = TfidfVectorizer(stop_words = stopset)
vectorization_2 = TfidfVectorizer(stop_words = stopset)

X_train_to, X_train_body = train_df.to, train_df.body
y_train = train_df.PII

X_train_to_vect = pd.DataFrame(vectorization_1.fit_transform(X_train_to.values.astype(str)).todense(), columns = vectorization_1.get_feature_names())
X_train_body_vect = pd.DataFrame(vectorization_2.fit_transform(X_train_body.values.astype(str)).todense(), columns = vectorization_2.get_feature_names())
  
train_vect = pd.concat([X_train_to_vect, X_train_body_vect], axis = 1)

clf = LogisticRegression(solver = 'lbfgs')
clf.fit(train_vect, y_train.values)

X_test_to, X_test_body = test_df.to[0:2000], test_df.body[0:2000]

X_test_to_vect = pd.DataFrame(vectorization_1.transform(X_test_to.values.astype(str)).todense(), columns = vectorization_1.get_feature_names())
X_test_body_vect = pd.DataFrame(vectorization_2.transform(X_test_body.values.astype(str)).todense(), columns = vectorization_2.get_feature_names())

test_vect = pd.concat([X_test_to_vect, X_test_body_vect], axis = 1)

pred = clf.predict(test_vect)

test_lables = pd.DataFrame({'DocumentId':test_df[0:2000].id,'IsPII':pred})

test_lables.head()

test_lables['IsPII'].value_counts()

filename = 'PII_detected_file.tsv'
test_lables.to_csv(filename, sep = '\t', index=False)

s3_resource = boto3.resource('s3')
s3_client = boto3.client('s3')

try:
	s3_client.upload_file('PII_detected_file.tsv', 'enronsamples', 'PII_detected_file.tsv')
	print('Successfully uploaded the labeled file')

except Exception as exc:
	print(exc)
